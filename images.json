[
  {
    "name": "postgres",
    "url": "https://hub.docker.com/_/postgres",
    "variables": {
      "POSTGRES_PASSWORD": {
        "short": "Sets the password for the default user",
        "required": true
      },
      "POSTGRES_USER": {
        "short": "The username for the default user. Defaults to `postgres`",
        "required": false
      },
      "POSTGRES_DB": {
        "short": "The default database name. Defaults to the value of `POSTGRES_USER`",
        "required": false
      }
    }
  },
  {
    "name": "mongo",
    "url": "https://hub.docker.com/_/mongo",
    "variables": {
      "MONGO_INITDB_ROOT_USERNAME": {
        "short": "The username for the default superuser",
        "required": true
      },
      "MONGO_INITDB_ROOT_PASSWORD": {
        "short": "The password for the default superuser",
        "required": true
      }
    }
  },
  {
    "name": "mongo-express",
    "url": "https://hub.docker.com/_/mongo-express",
    "variables": {
      "ME_CONFIG_BASICAUTH_USERNAME": {
        "short": "mongo-express web username",
        "required": false
      },
      "ME_CONFIG_BASICAUTH_PASSWORD": {
        "short": "mongo-express web password",
        "required": false
      },
      "ME_CONFIG_MONGODB_ENABLE_ADMIN": {
        "short": "Enable admin access to all databases. Send strings: `\"true\"` or `\"false\"`",
        "required": false
      },
      "ME_CONFIG_MONGODB_ADMINUSERNAME": {
        "short": "MongoDB admin username",
        "required": false
      },
      "ME_CONFIG_MONGODB_ADMINPASSWORD": {
        "short": "MongoDB admin password",
        "required": false
      },
      "ME_CONFIG_MONGODB_PORT": { "short": "MongoDB port", "required": false },
      "ME_CONFIG_MONGODB_SERVER": {
        "short": "MongoDB container name. Use comma delimited list of host names for replica sets.",
        "required": false
      },
      "ME_CONFIG_OPTIONS_EDITORTHEME": {
        "short": "mongo-express editor color theme, [more here](http://codemirror.net/demo/theme.html)",
        "required": false
      },
      "ME_CONFIG_REQUEST_SIZE": {
        "short": "Maximum payload size. CRUD operations above this size will fail in [body-parser](https://www.npmjs.com/package/body-parser).",
        "required": false
      },
      "ME_CONFIG_SITE_BASEURL": {
        "short": "Set the baseUrl to ease mounting at a subdirectory. Remember to include a leading and trailing slash.",
        "required": false
      },
      "ME_CONFIG_SITE_COOKIESECRET": {
        "short": "String used by [cookie-parser middleware](https://www.npmjs.com/package/cookie-parser) to sign cookies.",
        "required": false
      },
      "ME_CONFIG_SITE_SESSIONSECRET": {
        "short": "String used to sign the session ID cookie by [express-session middleware](https://www.npmjs.com/package/express-session).",
        "required": false
      },
      "ME_CONFIG_SITE_SSL_ENABLED": {
        "short": "Enable SSL.",
        "required": false
      },
      "ME_CONFIG_SITE_SSL_CRT_PATH": {
        "short": "SSL certificate file.",
        "required": false
      },
      "ME_CONFIG_SITE_SSL_KEY_PATH": {
        "short": "SSL key file.",
        "required": false
      }
    }
  },
  {
    "name": "wernight/ngrok",
    "url": "https://hub.docker.com/r/wernight/ngrok",
    "variables": {
      "NGROK_AUTH": {
        "short": "Authentication key for your Ngrok account. This is needed for custom subdomains, custom domains, and HTTP authentication",
        "required": false
      },
      "NGROK_SUBDOMAIN": {
        "short": "Name of the custom subdomain to use for your tunnel. You must also provide the authentication token.",
        "required": false
      },
      "NGROK_PORT": {
        "short": "Port to expose (defaults to `80` for `HTTP` protocol). If the server is non-local, the hostname can also be specified, e.g. `192.168.0.102:80`",
        "required": false
      }
    }
  },
  {
    "name": "sosedoff/pgweb",
    "url": "https://hub.docker.com/r/sosedoff/pgweb",
    "variables": {
      "DATABASE_URL": {
        "required": true,
        "short": "Database connection string"
      },
      "SESSIONS": {
        "required": true,
        "short": "Enable multiple database sessions"
      },
      "LOCK_SESSION": {
        "required": true,
        "short": "lock session to a single database connection"
      },
      "AUTH_USER": {
        "required": true,
        "short": "HTTP basic auth user"
      },
      "AUTH_PASS": {
        "required": true,
        "short": "HTTP basic auth password"
      },
      "URL_PREFIX": {
        "required": true,
        "short": "Add a url prefix"
      }
    }
  },
  {
    "name": "mysql",
    "url": "https://hub.docker.com/_/mysql",
    "variables": {
      "MYSQL_ROOT_PASSWORD": {
        "required": true,
        "short": "This variable specifies the password that will be set for the MySQL `root` superuser account."
      },
      "MYSQL_DATABASE": {
        "required": false,
        "short": "This variable allows you to specify the name of a database to be created on image startup. If a user/password was supplied (see below) then that user will be granted superuser access to this database."
      },
      "MYSQL_USER": {
        "required": false,
        "short": "Used with `MYSQL_PASSWORD` to create a new user."
      },
      "MYSQL_PASSWORD": {
        "required": false,
        "short": "Used with `MYSQL_USER` to create a new user."
      }
    }
  }
]
